var tt=Object.defineProperty;var et=(o,t,e)=>t in o?tt(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var y=(o,t,e)=>et(o,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function e(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(r){if(r.ep)return;r.ep=!0;const a=e(r);fetch(r.href,a)}})();function i(o,t,e){const n=document.createElement(o);return t&&(n.className=t),e&&(n.textContent=e),n}function p(o,t){t.forEach(e=>o.appendChild(e))}const J=["Tesla","Ford","Toyota","Honda","Chevrolet","BMW","Mercedes","Audi","Volkswagen","Porsche"],_=["Model S","Model 3","Mustang","Camry","Civic","Corvette","X5","E-Class","A4","911"];function nt(){const o=J[Math.floor(Math.random()*J.length)],t=_[Math.floor(Math.random()*_.length)],e=`${o} ${t}`,n=Math.floor(Math.random()*256).toString(16).padStart(2,"0"),r=Math.floor(Math.random()*256).toString(16).padStart(2,"0"),a=Math.floor(Math.random()*256).toString(16).padStart(2,"0"),s=`#${n}${r}${a}`;return{name:e,color:s}}function rt(o,t){return t/o}function ot(o){return`
    <svg width="50" height="20" viewBox="0 0 50 20" xmlns="http://www.w3.org/2000/svg">
      <rect class="car-body" width="50" height="20" rx="6" fill="${o}" />
      <rect class="car-window" x="20" y="3" width="15" height="8" rx="2" fill="#e0e0e0" />
      <circle class="car-wheel" cx="10" cy="20" r="4" fill="#333" />
      <circle class="car-wheel" cx="40" cy="20" r="4" fill="#333" />
    </svg>
  `}function it(o){const t=i("div","car");return t.innerHTML=ot(o.color),t.style.transform="translateX(0)",t.dataset.carId=o.id.toString(),t}function U(o,t,e,n,r){const a=i("div","pagination"),s=i("button","","Previous");s.disabled=o<=1,s.addEventListener("click",e);const l=r?`${o} of ${r}`:t?`${o}+`:o.toString(),d=i("span","",`Page ${l}`),c=i("button","","Next");return c.disabled=!t,c.addEventListener("click",n),p(a,[s,d,c]),a}function v(o,t="success"){const e=i("div",`notification ${t}`);e.textContent=o,document.body.appendChild(e),setTimeout(()=>{document.body.removeChild(e)},3e3)}function at(o){document.body.appendChild(o),setTimeout(()=>{o.classList.add("open")},10)}function M(o,t){const e=new URL(window.location.href);e.searchParams.set("view",o),e.searchParams.set("page",t.toString()),window.history.pushState({},"",e.toString())}function st(){const o=new URLSearchParams(window.location.search);return{view:o.get("view")||"garage",page:parseInt(o.get("page")||"1",10)}}const ct=[{id:1,name:"Tesla Model S",color:"#3f51b5"},{id:2,name:"Ford Mustang",color:"#f44336"},{id:3,name:"Chevrolet Camaro",color:"#ff9800"},{id:4,name:"BMW X5",color:"#4caf50"},{id:5,name:"Audi R8",color:"#2196f3"},{id:6,name:"Porsche 911",color:"#9c27b0"},{id:7,name:"Mercedes-Benz S-Class",color:"#607d8b"}];class lt{constructor(){y(this,"cars",new Map);y(this,"winners",new Map);y(this,"nextCarId",8);y(this,"nextWinnerId",1);ct.forEach(t=>{this.cars.set(t.id,t)})}getCars(t=1,e=7){const n=Array.from(this.cars.values()),r=(t-1)*e;return{items:n.slice(r,r+e),count:n.length}}getCar(t){return this.cars.get(t)}createCar(t){const e=this.nextCarId++,n={...t,id:e};return this.cars.set(e,n),n}updateCar(t,e){const n=this.cars.get(t);if(!n)return;const r={...n,...e};return this.cars.set(t,r),r}deleteCar(t){return this.winners.forEach((e,n)=>{e.carId===t&&this.winners.delete(n)}),this.cars.delete(t)}startEngine(t){const e=Math.floor(Math.random()*150)+50,n=Math.floor(Math.random()*1e3)+500;return{velocity:e,distance:n}}driveEngine(t){return{success:Math.random()>.2}}getWinners(t=1,e=10,n="id",r="ASC"){let a=Array.from(this.winners.values());a.sort((c,h)=>{let f=0;return n==="id"?f=c.id-h.id:n==="wins"?f=c.wins-h.wins:n==="time"&&(f=c.bestTime-h.bestTime),r==="ASC"?f:-f});const s=(t-1)*e;return{items:a.slice(s,s+e).map(c=>{const h=this.cars.get(c.carId);if(!h)throw new Error(`Car not found for winner: ${c.id}`);return{...c,car:h}}),count:a.length}}getWinner(t){const e=this.winners.get(t);if(!e)return;const n=this.cars.get(e.carId);if(n)return{...e,car:n}}getWinnerByCarId(t){return Array.from(this.winners.values()).find(n=>n.carId===t)}createWinner(t){const e=this.getWinnerByCarId(t.carId);if(e)return this.updateWinner(e.id,{wins:e.wins+1,bestTime:Math.min(e.bestTime,t.time)});const n=this.nextWinnerId++,r={id:n,carId:t.carId,wins:1,bestTime:t.time};return this.winners.set(n,r),r}updateWinner(t,e){const n=this.winners.get(t);if(!n)return;const r={...n};return e.wins!==void 0&&(r.wins=e.wins),e.bestTime!==void 0&&(r.bestTime=e.bestTime),this.winners.set(t,r),r}deleteWinner(t){return this.winners.delete(t)}generateRandomCars(t=100){for(let e=0;e<t;e++){const n=nt();this.createCar(n)}}}const E=new lt,b="/api",S=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1";async function T(o){if(!o.ok)throw new Error(`HTTP error ${o.status}: ${o.statusText}`);try{const t=o.headers.get("content-type"),e=await o.text();if(console.log("API Response:",{url:o.url,status:o.status,contentType:t,textLength:e.length,textPreview:e.substring(0,100)}),e.trim().startsWith("<!DOCTYPE")||e.trim().startsWith("<html"))throw console.error("Error: Received HTML instead of JSON",e.substring(0,200)),new Error("Received HTML instead of JSON. The server may be returning an error page.");return JSON.parse(e)}catch(t){throw console.error("Error parsing API response:",t),new Error(`Failed to parse response: ${t instanceof Error?t.message:String(t)}`)}}async function I(o=1,t=7){if(console.log(`Fetching cars for page ${o} with limit ${t}`),S)return console.log("Using mock data for cars"),E.getCars(o,t);const e=await fetch(`${b}/garage?page=${o}&limit=${t}`);return T(e)}async function dt(o){if(S)return E.createCar(o);const t=await fetch(`${b}/garage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});return T(t)}async function ht(o,t){if(S){const n=E.updateCar(o,t);if(!n)throw new Error(`Car with id ${o} not found`);return n}const e=await fetch(`${b}/garage/${o}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return T(e)}async function ut(o){if(S){if(!E.deleteCar(o))throw new Error(`Car with id ${o} not found`);return}const t=await fetch(`${b}/garage/${o}`,{method:"DELETE"});return T(t)}async function gt(o=100){if(S){E.generateRandomCars(o);return}const t=await fetch(`${b}/garage/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({count:o})});return T(t)}async function pt(o){if(S)return E.startEngine(o);const t=await fetch(`${b}/engine`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:o,status:"started"})});return T(t)}async function mt(o){if(S)return E.driveEngine(o);try{const t=await fetch(`${b}/engine`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:o,status:"drive"})});return t.status===500?{success:!1}:T(t)}catch(t){return console.error("Drive engine error:",t),{success:!1}}}async function ft(o){if(S)return;const t=await fetch(`${b}/engine`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:o,status:"stopped"})});return T(t)}async function wt(o=1,t=10,e="id",n="ASC"){if(console.log(`Fetching winners for page ${o} with limit ${t}, sort=${e}, order=${n}`),S)return console.log("Using mock data for winners"),E.getWinners(o,t,e,n);const r=await fetch(`${b}/winners?page=${o}&limit=${t}&sort=${e}&order=${n}`);return T(r)}async function j(o,t){if(S)return E.createWinner({carId:o,time:t});try{const n=await yt(o);if(n)return Ct(n.id,{wins:n.wins+1,bestTime:Math.min(n.bestTime,t)})}catch{console.log("No existing winner found, creating new one")}const e=await fetch(`${b}/winners`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({carId:o,time:t})});return T(e)}async function Ct(o,t){if(S){const n=E.updateWinner(o,t);if(!n)throw new Error(`Winner with id ${o} not found`);return n}const e=await fetch(`${b}/winners/${o}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return T(e)}async function yt(o){if(S)return E.getWinnerByCarId(o)||null;const t=await fetch(`${b}/winners?carId=${o}`),e=await T(t);return console.log(`Found ${e.length} winners for carId ${o}:`,e),e.length>0?e[0]:null}class vt{constructor(t){y(this,"container");y(this,"carsContainer");y(this,"racingCars");this.container=t,this.carsContainer=i("div","car-list"),this.racingCars=new Map}async renderGarage(t){this.container.innerHTML="",this.racingCars.clear();const e=i("div","page-info"),n=i("h2","");try{const{items:r,count:a}=await I(t.viewStates.garage.page,7);n.innerHTML=`Garage <span class="count-badge">${a}</span>`;const s=i("p","",`Page ${t.viewStates.garage.page}`);p(e,[n,s]);const l=this.createCarForm(t,!1),d=this.createCarForm(t,!0),c=this.createRaceControls(t);if(this.carsContainer.innerHTML="",r.length===0){const g=i("div","empty-message","No cars available. Create one!");this.carsContainer.appendChild(g)}else r.forEach(g=>{const w=this.createCarItem(g,t);this.carsContainer.appendChild(w)});const h=Math.ceil(a/7),f=t.viewStates.garage.page<h,u=U(t.viewStates.garage.page,f,()=>this.handlePrevPage(t),()=>this.handleNextPage(t),h);p(this.container,[e,l,d,c,this.carsContainer,u]),M("garage",t.viewStates.garage.page)}catch(r){console.error("Error loading garage:",r),n.textContent="Garage";const a=i("div","error-message","Failed to load cars. Please try again.");p(this.container,[e,a])}}createCarForm(t,e){const n=i("div","form-section"),r=i("h3","",e?"Update car":"Create car"),a=i("form","car-form"),s=i("div","form-row"),l=i("div","input-group"),d=i("label","","Car name");d.htmlFor=e?"update-car-name":"create-car-name";const c=i("input","");c.type="text",c.id=e?"update-car-name":"create-car-name",c.required=!0,c.value=e&&t.carForm.selectedCarId!==null?t.carForm.name:"",p(l,[d,c]);const h=i("div","input-group"),f=i("label","","Car color");f.htmlFor=e?"update-car-color":"create-car-color";const u=i("input","");u.type="color",u.id=e?"update-car-color":"create-car-color",u.value=e&&t.carForm.selectedCarId!==null?t.carForm.color:"#3f51b5",p(h,[f,u]),p(s,[l,h]);const g=i("button","",e?"Update":"Create");return g.type="submit",g.disabled=e&&t.carForm.selectedCarId===null,a.addEventListener("submit",async w=>{w.preventDefault();const m=document.getElementById(e?"update-car-name":"create-car-name").value,$=document.getElementById(e?"update-car-color":"create-car-color").value;e&&t.carForm.selectedCarId!==null?await this.handleUpdateCar(t,t.carForm.selectedCarId,m,$):await this.handleCreateCar(t,m,$),e||(c.value="",u.value="#3f51b5")}),p(a,[s,g]),p(n,[r,a]),e&&t.carForm.selectedCarId===null&&(n.style.display="none"),n}createRaceControls(t){const e=i("div","race-controls"),n=i("button","button-success","Race");n.disabled=t.race.isRacing,n.addEventListener("click",()=>this.handleStartRace(t));const r=i("button","button-secondary","Reset");r.disabled=!t.race.isRacing,r.addEventListener("click",()=>this.handleResetRace(t));const a=i("button","","Generate Cars");return a.addEventListener("click",()=>this.handleGenerateCars(t)),p(e,[n,r,a]),e}createCarItem(t,e){const n=i("div","car-item");n.dataset.carId=t.id.toString();const r=i("div","car-header"),a=i("div","car-info"),s=i("h3","",t.name),l=i("p","car-id",`#${t.id}`);p(a,[s,l]);const d=i("div","car-buttons"),c=i("button","button-secondary","Edit");c.addEventListener("click",()=>{e.carForm.selectedCarId=t.id,e.carForm.name=t.name,e.carForm.color=t.color,e.carForm.isUpdate=!0,this.renderGarage(e)});const h=i("button","button-danger","Delete");h.addEventListener("click",()=>this.handleDeleteCar(e,t.id)),p(d,[c,h]),p(r,[a,d]);const f=i("div","track"),u=i("div","engine-controls car-controls"),g=i("button","button-success","Start");g.addEventListener("click",()=>this.startCarEngine(e,t.id));const w=i("button","button-danger","Stop");w.disabled=!0,w.addEventListener("click",()=>this.stopCarEngine(e,t.id)),p(u,[g,w]);const m=it(t),$=i("div","finish-line");return p(f,[u,m,$]),p(n,[r,f]),this.racingCars.set(t.id,{element:m,animationId:null}),n}async handleCreateCar(t,e,n){try{await dt({name:e,color:n}),v("Car created successfully!","success"),this.renderGarage(t)}catch(r){console.error("Error creating car:",r),v("Failed to create car","error")}}async handleUpdateCar(t,e,n,r){try{await ht(e,{name:n,color:r}),t.carForm.selectedCarId=null,t.carForm.name="",t.carForm.color="",t.carForm.isUpdate=!1,v("Car updated successfully!","success"),this.renderGarage(t)}catch(a){console.error("Error updating car:",a),v("Failed to update car","error")}}async handleDeleteCar(t,e){try{await ut(e),t.carForm.selectedCarId===e&&(t.carForm.selectedCarId=null,t.carForm.name="",t.carForm.color="",t.carForm.isUpdate=!1),v("Car deleted successfully!","success"),this.renderGarage(t)}catch(n){console.error("Error deleting car:",n),v("Failed to delete car","error")}}async startCarEngine(t,e){if(this.racingCars.get(e))try{const r=await this.handleStartEngine(t,e),a=document.querySelector(`.car-item[data-car-id="${e}"]`);if(!a)return;const s=a.querySelector(".engine-controls button:first-child"),l=a.querySelector(".engine-controls button:last-child");s&&l&&(s.disabled=!0,l.disabled=!1),this.animateCar(t,e,r)}catch(r){console.error(`Error starting engine for car ${e}:`,r),v(`Failed to start engine for car ${e}`,"error")}}async stopCarEngine(t,e){if(this.racingCars.get(e))try{await this.handleStopEngine(t,e);const r=document.querySelector(`.car-item[data-car-id="${e}"]`);if(!r)return;const a=r.querySelector(".engine-controls button:first-child"),s=r.querySelector(".engine-controls button:last-child");a&&s&&(a.disabled=!1,s.disabled=!0),this.resetCarPosition(e)}catch(r){console.error(`Error stopping engine for car ${e}:`,r),v(`Failed to stop engine for car ${e}`,"error")}}animateCar(t,e,n){var m;const r=this.racingCars.get(e);if(!r||!r.element)return;const{velocity:a,distance:s}=n,l=rt(a,s),d=r.element.closest(".track");if(!d)return;const c=d.clientWidth,h=r.element.clientWidth,f=c-h-20;console.log(`Car ${e} animating with velocity: ${a}, distance: ${s}, time: ${l}s`),r.element.style.transition=`transform ${l}s linear`,r.element.style.transform=`translateX(${f}px)`;const u=Date.now(),g=document.querySelector(`.car-item[data-car-id="${e}"]`),w=((m=g==null?void 0:g.querySelector(".car-info h3"))==null?void 0:m.textContent)||`Car ${e}`;mt(e).then(({success:$})=>{if(!$){if(console.log(`Car ${e} engine broke down!`),v(`${w}'s engine broke down!`,"error"),g){const C=i("div","broken-engine-indicator","⚠️ Engine failure");C.style.color="red",C.style.fontWeight="bold",C.style.position="absolute",C.style.bottom="5px",C.style.left="50px",d==null||d.appendChild(C),setTimeout(()=>{d.removeChild(C)},3e3)}this.stopCarAnimation(e);return}r.animationId=window.setTimeout(()=>{const C=(Date.now()-u)/1e3;console.log(`Car ${e} finished in ${C.toFixed(2)}s`),t.race.isRacing&&!t.race.winner&&this.handleRaceFinish(t,e,C),r.animationId=null},l*1e3)})}stopCarAnimation(t){const e=this.racingCars.get(t);if(e&&(e.animationId!==null&&(clearTimeout(e.animationId),e.animationId=null),e.element)){const n=window.getComputedStyle(e.element).transform;e.element.style.transition="none",e.element.style.transform=n}}resetCarPosition(t){const e=this.racingCars.get(t);!e||!e.element||(e.element.style.transition="transform 0.3s ease-out",e.element.style.transform="translateX(0)")}async handleRaceFinish(t,e,n){var r,a;try{console.log(`Race finished: Car ${e} with time ${n.toFixed(2)}s`);const s=document.querySelector(`.car-item[data-car-id="${e}"]`),l=((r=s==null?void 0:s.querySelector(".car-info h3"))==null?void 0:r.textContent)||`Car ${e}`,d=((a=document.querySelector(`[data-car-id="${e}"] .car-svg`))==null?void 0:a.getAttribute("fill"))||"#000000",c={id:e,name:l,color:d};if(console.log("Winning car found:",c),c){t.race.winner={car:c,time:n};try{console.log(`Attempting to record winner: Car ${e} with time ${n}`);const P=await j(e,n);console.log("Successfully recorded winner:",P)}catch(P){console.error("Failed to record winner:",P)}const h=i("div","modal winner-modal"),f=i("div","modal-content"),u=i("div","modal-header"),g=i("h2","winner-title","Winner!"),w=i("button","close-button","X");w.addEventListener("click",()=>{h.classList.remove("open"),document.body.removeChild(h)}),p(u,[g,w]);const m=i("div","modal-body"),$=i("div","winner-info"),C=i("div","car-preview winner-animation");C.innerHTML=`
          <div class="car-body" style="background-color: ${c.color};"></div>
          <div class="car-window"></div>
        `;const L=i("p","winner-name",`${c.name} won the race!`),F=i("p","winner-time",`Time: ${n.toFixed(2)}s`);p($,[C,L,F]),m.appendChild($);const W=i("div","modal-footer"),k=i("button","","OK");k.addEventListener("click",()=>{h.classList.remove("open"),document.body.removeChild(h)}),W.appendChild(k),p(f,[u,m,W]),h.appendChild(f),at(h)}}catch(s){console.error("Error handling race finish:",s)}}async handleStartEngine(t,e){try{return await pt(e)}catch(n){throw console.error(`Error starting engine for car ${e}:`,n),n}}async handleStopEngine(t,e){try{this.stopCarAnimation(e),await ft(e),this.resetCarPosition(e)}catch(n){throw console.error(`Error stopping engine for car ${e}:`,n),n}}async handleStartRace(t){try{t.race.isRacing=!0,t.race.winner=null;const{items:e}=await I(t.viewStates.garage.page,7),n=document.querySelector(".race-controls button:first-child"),r=document.querySelector(".race-controls button:nth-child(2)");n&&r&&(n.disabled=!0,r.disabled=!1);const a=e.map(async s=>{try{const l=await this.handleStartEngine(t,s.id),d=document.querySelector(`.car-item[data-car-id="${s.id}"]`);if(!d)return;const c=d.querySelector(".engine-controls button:first-child"),h=d.querySelector(".engine-controls button:last-child");c&&h&&(c.disabled=!0,h.disabled=!1),this.animateCar(t,s.id,l)}catch(l){console.error(`Error starting engine for car ${s.id} during race:`,l)}});await Promise.all(a)}catch(e){console.error("Error starting race:",e),t.race.isRacing=!1,v("Failed to start race","error")}}async handleResetRace(t){try{t.race.isRacing=!1,t.race.winner=null;const{items:e}=await I(t.viewStates.garage.page,7),n=document.querySelector(".race-controls button:first-child"),r=document.querySelector(".race-controls button:nth-child(2)");n&&r&&(n.disabled=!1,r.disabled=!0);const a=e.map(async s=>{try{await this.handleStopEngine(t,s.id);const l=document.querySelector(`.car-item[data-car-id="${s.id}"]`);if(!l)return;const d=l.querySelector(".engine-controls button:first-child"),c=l.querySelector(".engine-controls button:last-child");d&&c&&(d.disabled=!1,c.disabled=!0)}catch(l){console.error(`Error stopping engine for car ${s.id} during reset:`,l)}});await Promise.all(a)}catch(e){console.error("Error resetting race:",e),v("Failed to reset race","error")}}async handleGenerateCars(t){try{await gt(),v("Successfully generated 100 cars!","success"),this.renderGarage(t)}catch(e){console.error("Error generating cars:",e),v("Failed to generate cars","error")}}handleNextPage(t){t.viewStates.garage.page+=1,M("garage",t.viewStates.garage.page),this.renderGarage(t)}handlePrevPage(t){t.viewStates.garage.page>1&&(t.viewStates.garage.page-=1,M("garage",t.viewStates.garage.page),this.renderGarage(t))}}class bt{constructor(t){y(this,"container");y(this,"sortColumn","id");y(this,"sortOrder","ASC");this.container=t}async renderWinners(t){this.container.innerHTML="";const e=i("div","page-info"),n=i("h2","");try{console.log("Fetching winners with params:",{page:t.viewStates.winners.page,limit:10,sort:this.sortColumn,order:this.sortOrder});const r=await wt(t.viewStates.winners.page,10,this.sortColumn,this.sortOrder);console.log("Winners response:",r);const{items:a,count:s}=r;n.innerHTML=`Winners <span class="count-badge">${s}</span>`;const l=i("p","",`Page ${t.viewStates.winners.page}`);p(e,[n,l]);const d=i("div","table-container");if(a.length===0){const u=i("div","empty-message","No winners yet!");d.appendChild(u)}else{const u=i("table","table"),g=i("thead",""),w=i("tr",""),m=(L,F)=>{const W=i("th",""),k=i("div","table-header-sortable");if(k.textContent=L,F==="wins"||F==="bestTime"){const P=i("span",`sort-icon ${this.sortColumn===F?this.sortOrder.toLowerCase():""}`);k.appendChild(P),W.addEventListener("click",()=>{const O=this.sortColumn===F&&this.sortOrder==="ASC"?"DESC":"ASC";this.handleSort(t,F,O)})}return W.appendChild(k),W},$=[m("№","id"),m("Car",""),m("Name","name"),m("Wins","wins"),m("Best Time (s)","bestTime")];p(w,$),g.appendChild(w);const C=i("tbody","");a.forEach((L,F)=>{const W=i("tr",""),k=i("td","",`${(t.viewStates.winners.page-1)*10+F+1}`),P=i("td",""),O=i("div","car-preview");O.innerHTML=`
            <div class="car-body" style="background-color: ${L.car.color};"></div>
            <div class="car-window"></div>
          `,P.appendChild(O);const K=i("td","",L.car.name),z=i("td","",L.wins.toString()),Q=typeof L.bestTime=="string"?parseFloat(L.bestTime).toFixed(2):L.bestTime.toFixed(2),Z=i("td","",Q);p(W,[k,P,K,z,Z]),C.appendChild(W)}),p(u,[g,C]),d.appendChild(u)}const c=Math.ceil(s/10),h=t.viewStates.winners.page<c,f=U(t.viewStates.winners.page,h,()=>this.handlePrevPage(t),()=>this.handleNextPage(t),c);p(this.container,[e,d,f]),M("winners",t.viewStates.winners.page)}catch(r){console.error("Error loading winners:",r),n.textContent="Winners";const a=i("div","error-message","Failed to load winners. Please try again.");p(this.container,[e,a])}}handleSort(t,e,n){this.sortColumn=e,this.sortOrder=n,this.renderWinners(t)}handleNextPage(t){t.viewStates.winners.page+=1,M("winners",t.viewStates.winners.page),this.renderWinners(t)}handlePrevPage(t){t.viewStates.winners.page>1&&(t.viewStates.winners.page-=1,M("winners",t.viewStates.winners.page),this.renderWinners(t))}async recordWinner(t,e,n){try{await j(e,n)}catch(r){console.error("Error recording winner:",r)}}}const D=[{title:"Welcome to Car Racing SPA!",content:"This quick tutorial will guide you through the main features of the application. Click Next to continue or Skip to exit the tutorial.",target:"h1",position:"bottom",highlightTarget:!0},{title:"Navigation",content:"Use these buttons to switch between the Garage view and the Winners view.",target:"nav",position:"bottom",highlightTarget:!0},{title:"Garage View",content:"The Garage view allows you to create, update, and delete cars, as well as race them.",target:'[data-view="garage"]',position:"bottom",highlightTarget:!0},{title:"Winners View",content:"The Winners view shows the statistics of all races, including the best time and number of wins for each car.",target:'[data-view="winners"]',position:"bottom",highlightTarget:!0},{title:"Create Car",content:"Use this form to create a new car. Enter a name and pick a color, then click Create.",target:".car-form:first-child",position:"right",highlightTarget:!0},{title:"Update Car",content:`To update a car, click the "Edit" button next to a car. This will populate the update form with the car's details.`,target:".button-secondary",position:"right",highlightTarget:!1},{title:"Race Controls",content:"These buttons allow you to start a race with all cars, reset all cars to their starting positions, or generate random cars.",target:".race-controls",position:"bottom",highlightTarget:!0},{title:"Car Controls",content:"Each car has its own controls. You can start the engine, stop it, select the car for updates, or delete it.",target:".engine-controls",position:"right",highlightTarget:!0},{title:"Pagination",content:"Use these buttons to navigate between pages of cars or winners.",target:".pagination",position:"top",highlightTarget:!0},{title:"That's it!",content:`You're all set to use the Car Racing SPA! Click Finish to close this tutorial. You can access it again anytime by clicking the "?" button in the navigation.`,target:".help-button",position:"bottom",highlightTarget:!0}];class H{constructor(t,e){y(this,"currentStep",0);y(this,"overlay");y(this,"tooltip");y(this,"skipCallback");y(this,"completionCallback");this.skipCallback=t,this.completionCallback=e,this.overlay=i("div","tutorial-overlay"),document.body.appendChild(this.overlay),this.tooltip=i("div","tutorial-tooltip"),document.body.appendChild(this.tooltip)}start(){this.overlay.classList.add("active"),this.showStep(0)}end(){this.overlay.classList.remove("active"),this.tooltip.classList.remove("active"),setTimeout(()=>{this.overlay.remove(),this.tooltip.remove()},300),localStorage.setItem("tutorialCompleted","true"),this.completionCallback()}showStep(t){this.currentStep=t;const e=D[t];this.tooltip.innerHTML="",this.tooltip.className="tutorial-tooltip";const n=i("div","tutorial-title",e.title),r=i("div","tutorial-content",e.content),a=i("div","tutorial-buttons"),s=i("button","tutorial-button tutorial-skip","Skip");s.addEventListener("click",()=>this.skip());const l=i("div","tutorial-nav-buttons"),d=i("button","tutorial-button tutorial-prev","Prev");d.disabled=t===0,d.addEventListener("click",()=>this.showStep(this.currentStep-1));const c=t===D.length-1,h=i("button",`tutorial-button ${c?"tutorial-finish":"tutorial-next"}`,c?"Finish":"Next");h.addEventListener("click",()=>{c?this.end():this.showStep(this.currentStep+1)}),l.appendChild(d),l.appendChild(h),a.appendChild(s),a.appendChild(l);const f=i("div","tutorial-progress");for(let u=0;u<D.length;u++){const g=i("div",`tutorial-indicator ${u===t?"active":""}`);f.appendChild(g)}if(this.tooltip.appendChild(n),this.tooltip.appendChild(r),this.tooltip.appendChild(a),this.tooltip.appendChild(f),this.tooltip.classList.add(`position-${e.position}`),this.tooltip.classList.add("active"),this.positionTooltip(e),e.highlightTarget){const u=document.querySelector(".tutorial-highlight");u&&u.remove();const g=document.querySelector(e.target);if(g)try{const w=i("div","tutorial-highlight"),m=g.getBoundingClientRect();m.width>0&&m.height>0?(w.style.top=`${m.top}px`,w.style.left=`${m.left}px`,w.style.width=`${m.width}px`,w.style.height=`${m.height}px`,document.body.appendChild(w)):console.warn(`Tutorial target ${e.target} has invalid dimensions`)}catch(w){console.error(`Error creating highlight for ${e.target}:`,w)}}}positionTooltip(t){const e=document.querySelector(t.target);if(!e){if(console.warn(`Tutorial target not found: ${t.target}`),this.currentStep===0){const l=document.querySelector("header");if(l){const d=l.getBoundingClientRect();this.tooltip.style.top=`${d.bottom+15}px`,this.tooltip.style.left="50%",this.tooltip.style.transform="translateX(-50%)";return}}this.tooltip.style.top="50%",this.tooltip.style.left="50%",this.tooltip.style.transform="translate(-50%, -50%)";return}const n=e.getBoundingClientRect(),r=this.tooltip.getBoundingClientRect();let a=0,s=0;switch(t.position){case"top":a=n.top-r.height-15,s=n.left+n.width/2-r.width/2;break;case"bottom":a=n.bottom+15,s=n.left+n.width/2-r.width/2;break;case"left":a=n.top+n.height/2-r.height/2,s=n.left-r.width-15;break;case"right":a=n.top+n.height/2-r.height/2,s=n.right+15;break}a<10&&(a=10),a+r.height>window.innerHeight-10&&(a=window.innerHeight-r.height-10),s<10&&(s=10),s+r.width>window.innerWidth-10&&(s=window.innerWidth-r.width-10),this.tooltip.style.top=`${a}px`,this.tooltip.style.left=`${s}px`}skip(){this.end(),this.skipCallback()}static shouldShowTutorial(){return localStorage.getItem("tutorialCompleted")!=="true"}static resetTutorial(){localStorage.removeItem("tutorialCompleted")}}const x={view:"garage",viewStates:{garage:{page:1},winners:{page:1}},carForm:{name:"",color:"#3f51b5",isUpdate:!1,selectedCarId:null},race:{isRacing:!1,winner:null}},A=i("div","container");document.body.appendChild(A);const X=i("header","header"),St=i("h1","","Car Racing SPA");X.appendChild(St);A.appendChild(X);const R=i("nav","nav"),B=i("button","nav-button","Garage");B.setAttribute("data-view","garage");const N=i("button","nav-button","Winners");N.setAttribute("data-view","winners");B.addEventListener("click",()=>V("garage"));N.addEventListener("click",()=>V("winners"));R.appendChild(B);R.appendChild(N);A.appendChild(R);const q=i("main","main-content");A.appendChild(q);const Tt=new vt(q),$t=new bt(q);function V(o){x.view=o,B.classList.toggle("active",o==="garage"),N.classList.toggle("active",o==="winners"),Y()}async function Y(){q.innerHTML="",x.view==="garage"?await Tt.renderGarage(x):x.view==="winners"&&await $t.renderWinners(x)}async function Et(){const{view:o,page:t}=st();if(x.view=o,o==="garage"?x.viewStates.garage.page=t:o==="winners"&&(x.viewStates.winners.page=t),B.classList.toggle("active",x.view==="garage"),N.classList.toggle("active",x.view==="winners"),await Y(),H.shouldShowTutorial()){const e=i("button","nav-button help-button","?");e.title="Show Tutorial",e.style.borderRadius="50%",e.style.width="30px",e.style.height="30px",e.style.marginLeft="auto",e.addEventListener("click",()=>{H.resetTutorial(),G()}),R.appendChild(e),G()}else{const e=i("button","nav-button help-button","?");e.title="Show Tutorial",e.style.borderRadius="50%",e.style.width="30px",e.style.height="30px",e.style.marginLeft="auto",e.addEventListener("click",()=>G()),R.appendChild(e)}}function G(){new H(()=>{console.log("Tutorial skipped")},()=>{console.log("Tutorial completed")}).start()}Et().catch(o=>{console.error("Error initializing application:",o)});
